name: TID Automation release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest
    env: # 가상환경
      PERSONAL_ACCESS_TOKEN : ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      XC_VERSION: ${{ '13.4.1' }}
      XC_PROJECT: ${{ 'usket_TID.xcodeproj' }}
      XC_SCHEME: ${{ 'usket_TID' }}
      XC_ARCHIVE_PATH: ${{ 'usket_TID.xcarchive' }}
      KEYCHAIN: ${{ 'usket.keychain' }}
      
      ENCRYPTED_CERTS_FILE_PATH: ${{ '.github/secrets/GithubActionKey.p12.gpg' }}
      DECRYPTED_CERTS_FILE_PATH: ${{ '.github/secrets/GithubActionKey.p12' }} # 어디에 복호화 할 것인지 명시

      ENCRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/GithubAction.mobileprovision.gpg' }}
      DECRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/GithubAction.mobileprovision' }} # 어디에 복호화 할 것인지 명시

      CERTS_EXPORT_PWD: ${{ secrets.CERTS_EXPORT_PWD }}
      CERTS_ENCRYPTION_PWD: ${{ secrets.CERTS_ENCRYPTO_PWD }}
      PROFILES_ENCRYPTO_PWD: ${{ secrets.PROFILES_ENCRYPTO_PWD }}

    steps:
      - name: Setting checkout
        uses: actions/checkout@v3

      - name: :"Credentials setup"
        run: |  
          git config --global url."https://${PERSONAL_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
          
      - name: Select Xcode Version
        run: "sudo xcode-select -s /Applications/Xcode_$XC_VERSION.app"

      - name: Configure Keychain 
        run: | 
          security create-keychain -p "" "$KEYCHAIN" 
          security list-keychains -s "$KEYCHAIN" 
          security default-keychain -s "$KEYCHAIN" 
          security unlock-keychain -p "" "$KEYCHAIN"
          security set-keychain-settings -lut 1200
          security list-keychains
          
      - name : Configure Code Signing
        run: | 
          gpg -d -o "$DECRYPTED_CERTS_FILE_PATH" --pinentry-mode=loopback --passphrase "$CERTS_ENCRYPTION_PWD" "$ENCRYPTED_CERTS_FILE_PATH"
          gpg -d -o "$DECRYPTED_PROVISION_FILE_PATH" --pinentry-mode=loopback --passphrase "$PROFILES_ENCRYPTO_PWD" "$ENCRYPTED_PROVISION_FILE_PATH"
          security import "$DECRYPTED_CERTS_FILE_PATH" -k "$KEYCHAIN" -P "$CERTS_EXPORT_PWD" -A
          security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN"
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"

          echo `ls .github/secrets/*.mobileprovision`
          # 프로파일들을 rename하고 새로만든 디렉토리에 복사
          for PROVISION in `ls .github/secrets/*.mobileprovision`
            do
              UUID=`/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< $(security cms -D -i ./$PROVISION)`
            cp "./$PROVISION" "$HOME/Library/MobileDevice/Provisioning Profiles/$UUID.mobileprovision"
            done

      - name: Archive App
        working-directory: usket_TID
        run: | 
          xcodebuild clean archive -project "$XC_PROJECT" -scheme "$XC_SCHEME" -configuration release -archivePath "$XC_ARCHIVE_PATH" 
          
      - name: Export App
        working-directory: usket_TID
        run:  |
          xcodebuild -exportArchive -archivePath "$XC_ARCHIVE_PATH" -exportOptionsPlist ExportOptions.plist -exportPath . -allowProvisioningUpdates
          ls

      - name: Upload app to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: 'usket_TID.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
